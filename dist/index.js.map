{"version":3,"file":"index.js","mappings":"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","sources":["webpack://grapesjs-parser-postcss/webpack/universalModuleDefinition","webpack://grapesjs-parser-postcss/./node_modules/picocolors/picocolors.browser.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/at-rule.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/comment.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/container.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/css-syntax-error.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/declaration.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/document.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/fromJSON.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/input.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/lazy-result.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/list.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/map-generator.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/no-work-result.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/node.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/parse.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/parser.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/postcss.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/previous-map.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/processor.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/result.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/root.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/rule.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/stringifier.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/stringify.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/symbols.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/tokenize.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/warn-once.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/warning.js","webpack://grapesjs-parser-postcss/./node_modules/nanoid/non-secure/index.cjs","webpack://grapesjs-parser-postcss/webpack/bootstrap","webpack://grapesjs-parser-postcss/webpack/runtime/define property getters","webpack://grapesjs-parser-postcss/webpack/runtime/hasOwnProperty shorthand","webpack://grapesjs-parser-postcss/webpack/runtime/make namespace object","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/postcss.mjs","webpack://grapesjs-parser-postcss/./src/parser.ts","webpack://grapesjs-parser-postcss/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-parser-postcss\"] = factory();\n\telse\n\t\troot[\"grapesjs-parser-postcss\"] = factory();\n})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {\nreturn ","var x=String;\nvar create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x}};\nmodule.exports=create();\nmodule.exports.createColors = create;\n","'use strict'\n\nlet Container = require('./container')\n\nclass AtRule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'atrule'\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.prepend(...children)\n  }\n}\n\nmodule.exports = AtRule\nAtRule.default = AtRule\n\nContainer.registerAtRule(AtRule)\n","'use strict'\n\nlet Node = require('./node')\n\nclass Comment extends Node {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n}\n\nmodule.exports = Comment\nComment.default = Comment\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet Declaration = require('./declaration')\nlet Comment = require('./comment')\nlet Node = require('./node')\n\nlet parse, Rule, AtRule\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\nfunction markDirtyUp(node) {\n  node[isClean] = false\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markDirtyUp(i)\n    }\n  }\n}\n\nclass Container extends Node {\n  push(child) {\n    child.parent = this\n    this.proxyOf.nodes.push(child)\n    return this\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator()\n\n    let index, result\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator]\n      result = callback(this.proxyOf.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[iterator] += 1\n    }\n\n    delete this.indexes[iterator]\n    return result\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n\n      return result\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.proxyOf.nodes.push(node)\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  prepend(...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.proxyOf.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  insertBefore(exist, add) {\n    exist = this.index(exist)\n\n    let type = exist === 0 ? 'prepend' : false\n    let nodes = this.normalize(add, this.proxyOf.nodes[exist], type).reverse()\n    for (let node of nodes) this.proxyOf.nodes.splice(exist, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (exist <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  insertAfter(exist, add) {\n    exist = this.index(exist)\n\n    let nodes = this.normalize(add, this.proxyOf.nodes[exist]).reverse()\n    for (let node of nodes) this.proxyOf.nodes.splice(exist + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (exist < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child)\n    this.proxyOf.nodes[child].parent = undefined\n    this.proxyOf.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined\n    this.proxyOf.nodes = []\n\n    this.markDirty()\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = {}\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    this.markDirty()\n\n    return this\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector) {\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      /* c8 ignore next */\n      if (!i[my]) Container.rebuild(i)\n      i = i.proxyOf\n      if (i.parent) i.parent.removeChild(i)\n      if (i[isClean]) markDirtyUp(i)\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '')\n        }\n      }\n      i.parent = this.proxyOf\n      return i\n    })\n\n    return processed\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = {}\n\n    this.lastEach += 1\n    let iterator = this.lastEach\n    this.indexes[iterator] = 0\n\n    return iterator\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse = dependant\n}\n\nContainer.registerRule = dependant => {\n  Rule = dependant\n}\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant\n}\n\nmodule.exports = Container\nContainer.default = Container\n\n/* c8 ignore start */\nContainer.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype)\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype)\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration.prototype)\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment.prototype)\n  }\n\n  node[my] = true\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container.rebuild(child)\n    })\n  }\n}\n/* c8 ignore stop */\n","'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n    if (terminalHighlight) {\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    let mark, aside\n    if (color) {\n      let { bold, red, gray } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n    } else {\n      mark = aside = str => str\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n","'use strict'\n\nlet Node = require('./node')\n\nclass Declaration extends Node {\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) }\n    }\n    super(defaults)\n    this.type = 'decl'\n  }\n\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n}\n\nmodule.exports = Declaration\nDeclaration.default = Declaration\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Document extends Container {\n  constructor(defaults) {\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n    super({ type: 'document', ...defaults })\n\n    if (!this.nodes) {\n      this.nodes = []\n    }\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n\n    return lazy.stringify()\n  }\n}\n\nDocument.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nDocument.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Document\nDocument.default = Document\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet PreviousMap = require('./previous-map')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Input = require('./input')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { resolve, isAbsolute } = require('path')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      line: min + 1,\n      col: offset - lineToIndex[min] + 1\n    }\n  }\n\n  error(message, line, column, opts = {}) {\n    let result, endLine, endColumn\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof line.offset === 'number') {\n        let pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { line: origin.line, column: origin.column },\n        origin.endLine === undefined\n          ? origin.column\n          : { line: origin.endLine, column: origin.endColumn },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { line, column },\n        endLine === undefined ? column : { line: endLine, column: endColumn },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { line, column, endLine, endColumn, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ line, column })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ line: endLine, column: endColumn })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      url: fromUrl.toString(),\n      line: from.line,\n      column: from.column,\n      endLine: to && to.line,\n      endColumn: to && to.column\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet Container = require('./container')\nlet Document = require('./document')\nlet warnOnce = require('./warn-once')\nlet Result = require('./result')\nlet parse = require('./parse')\nlet Root = require('./root')\n\nconst TYPE_TO_CLASS_NAME = {\n  document: 'Document',\n  root: 'Root',\n  atrule: 'AtRule',\n  rule: 'Rule',\n  decl: 'Declaration',\n  comment: 'Comment'\n}\n\nconst PLUGIN_PROPS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true,\n  Document: true,\n  Root: true,\n  Declaration: true,\n  Rule: true,\n  AtRule: true,\n  Comment: true,\n  DeclarationExit: true,\n  RuleExit: true,\n  AtRuleExit: true,\n  CommentExit: true,\n  RootExit: true,\n  DocumentExit: true,\n  OnceExit: true\n}\n\nconst NOT_VISITORS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    node,\n    events,\n    eventIndex: 0,\n    visitors: [],\n    visitorIndex: 0,\n    iterator: 0\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, result: this.result, postcss }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  toString() {\n    return this.css\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n","'use strict'\n\nlet list = {\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let quote = false\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (quote) {\n        if (letter === quote) {\n          quote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        quote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  comma(string) {\n    return list.split(string, [','], true)\n  }\n}\n\nmodule.exports = list\nlist.default = list\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, resolve, relative, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.css, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            this.map.setSourceContent(\n              this.toUrl(this.path(from)),\n              node.source.input.css\n            )\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>',\n        generated: { line: 1, column: 0 },\n        original: { line: 1, column: 0 }\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  path(file) {\n    if (file.indexOf('<') === 0) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    if (this.mapOpts.absolute) return file\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    file = relative(from, file)\n    return file\n  }\n\n  toUrl(path) {\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.mapOpts.absolute) {\n      if (pathToFileURL) {\n        return pathToFileURL(node.source.input.from).toString()\n      } else {\n        throw new Error(\n          '`map.absolute` option is not available in this PostCSS build'\n        )\n      }\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      source: '',\n      generated: { line: 0, column: 0 },\n      original: { line: 0, column: 0 }\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n}\n\nmodule.exports = MapGenerator\n","'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\nlet parse = require('./parse')\nconst Result = require('./result')\n\nclass NoWorkResult {\n  constructor(processor, css, opts) {\n    css = css.toString()\n    this.stringified = false\n\n    this._processor = processor\n    this._css = css\n    this._opts = opts\n    this._map = undefined\n    let root\n\n    let str = stringify\n    this.result = new Result(this._processor, root, this._opts)\n    this.result.css = css\n\n    let self = this\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    })\n\n    let map = new MapGenerator(str, root, this._opts, css)\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate()\n      if (generatedCSS) {\n        this.result.css = generatedCSS\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get content() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root\n    let parser = parse\n\n    try {\n      root = parser(this._css, this._opts)\n    } catch (error) {\n      this.error = error\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root\n      return root\n    }\n  }\n\n  get messages() {\n    return []\n  }\n\n  warnings() {\n    return []\n  }\n\n  toString() {\n    return this._css\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n}\n\nmodule.exports = NoWorkResult\nNoWorkResult.default = NoWorkResult\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { start, end } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { line: start.line, column: start.column },\n        { line: end.line, column: end.column },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          inputId,\n          start: value.start,\n          end: value.end\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  positionInside(index) {\n    let string = this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { line, column }\n  }\n\n  positionBy(opts) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index)\n    } else if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index)\n    }\n    return pos\n  }\n\n  rangeBy(opts) {\n    let start = {\n      line: this.source.start.line,\n      column: this.source.start.column\n    }\n    let end = this.source.end\n      ? {\n          line: this.source.end.line,\n          column: this.source.end.column + 1\n        }\n      : {\n          line: start.line,\n          column: start.column + 1\n        }\n\n    if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index)\n        end = this.positionInside(index + opts.word.length)\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          line: opts.start.line,\n          column: opts.start.column\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          line: opts.end.line,\n          column: opts.end.column\n        }\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { line: start.line, column: start.column + 1 }\n    }\n\n    return { start, end }\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n","'use strict'\n\nlet Container = require('./container')\nlet Parser = require('./parser')\nlet Input = require('./input')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet tokenizer = require('./tokenize')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n}\n\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i]\n    let pos = token[3] || token[2]\n    if (pos) return pos\n  }\n}\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n    this.customProperty = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { offset: 0, line: 1, column: 1 } }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0]\n          if (token !== 'space' && token !== 'comment') break\n          this.tokenizer.back(tokens.pop())\n        }\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n\n    node.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    )\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n\n    let firstSpaces = []\n    let next\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      firstSpaces.push(tokens.shift())\n    }\n\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n\n    if (hasWord) {\n      node.raws.between += firstSpaces.map(i => i[1]).join('')\n      firstSpaces = []\n    }\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty)\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      offset,\n      line: pos.line,\n      column: pos.col\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      start: this.getPosition(offset),\n      input: this.input\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  raw(node, prop, tokens, customProperty) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n      if (type === 'space' && i === length - 1 && !customProperty) {\n        clean = false\n      } else if (type === 'comment') {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty'\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty'\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === ',') {\n            clean = false\n          } else {\n            value += token[1]\n          }\n        } else {\n          clean = false\n        }\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { value, raw }\n    }\n    node[prop] = value\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let token, type, prev\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  // Errors\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word',\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n}\n\nmodule.exports = Parser\n","'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet LazyResult = require('./lazy-result')\nlet Container = require('./container')\nlet Processor = require('./processor')\nlet stringify = require('./stringify')\nlet fromJSON = require('./fromJSON')\nlet Document = require('./document')\nlet Warning = require('./warning')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Result = require('./result.js')\nlet Input = require('./input')\nlet parse = require('./parse')\nlet list = require('./list')\nlet Rule = require('./rule')\nlet Root = require('./root')\nlet Node = require('./node')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false\n  function creator(...args) {\n    // eslint-disable-next-line no-console\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n      )\n      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n        /* c8 ignore next 7 */\n        // eslint-disable-next-line no-console\n        console.warn(\n          name +\n            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n            'https://www.w3ctech.com/topic/2226'\n        )\n      }\n    }\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Processor = Processor\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm)\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop())\n    let end = css.indexOf('*/', start)\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end))\n    }\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n","'use strict'\n\nlet NoWorkResult = require('./no-work-result')\nlet LazyResult = require('./lazy-result')\nlet Document = require('./document')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.4.14'\n    this.plugins = this.normalize(plugins)\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n\n  process(css, opts = {}) {\n    if (\n      this.plugins.length === 0 &&\n      typeof opts.parser === 'undefined' &&\n      typeof opts.stringifier === 'undefined' &&\n      typeof opts.syntax === 'undefined'\n    ) {\n      return new NoWorkResult(this, css, opts)\n    } else {\n      return new LazyResult(this, css, opts)\n    }\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\nDocument.registerProcessor(Processor)\n","'use strict'\n\nlet Warning = require('./warning')\n\nclass Result {\n  constructor(processor, root, opts) {\n    this.processor = processor\n    this.messages = []\n    this.root = root\n    this.opts = opts\n    this.css = undefined\n    this.map = undefined\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  get content() {\n    return this.css\n  }\n}\n\nmodule.exports = Result\nResult.default = Result\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n","'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n","'use strict'\n\nconst DEFAULT_RAW = {\n  colon: ': ',\n  indent: '    ',\n  beforeDecl: '\\n',\n  beforeRule: '\\n',\n  beforeOpen: ' ',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  after: '\\n',\n  emptyBody: '',\n  commentLeft: ' ',\n  commentRight: ' ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n}\n\nmodule.exports = Stringifier\nStringifier.default = Stringifier\n","'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n","'use strict'\n\nmodule.exports.isClean = Symbol('isClean')\n\nmodule.exports.my = Symbol('my')\n","'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, next, quote, content, escape\n  let escaped, escapePos, prev, n, currentToken\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    nextToken,\n    endOfFile,\n    position\n  }\n}\n","/* eslint-disable no-console */\n'use strict'\n\nlet printed = {}\n\nmodule.exports = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n","'use strict'\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning'\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts)\n      this.line = range.start.line\n      this.column = range.start.column\n      this.endLine = range.end.line\n      this.endColumn = range.end.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        plugin: this.plugin,\n        index: this.index,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nmodule.exports = Warning\nWarning.default = Warning\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nmodule.exports = { nanoid, customAlphabet }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import postcss from './postcss.js'\n\nexport default postcss\n\nexport const stringify = postcss.stringify\nexport const fromJSON = postcss.fromJSON\nexport const plugin = postcss.plugin\nexport const parse = postcss.parse\nexport const list = postcss.list\n\nexport const document = postcss.document\nexport const comment = postcss.comment\nexport const atRule = postcss.atRule\nexport const rule = postcss.rule\nexport const decl = postcss.decl\nexport const root = postcss.root\n\nexport const CssSyntaxError = postcss.CssSyntaxError\nexport const Declaration = postcss.Declaration\nexport const Container = postcss.Container\nexport const Processor = postcss.Processor\nexport const Document = postcss.Document\nexport const Comment = postcss.Comment\nexport const Warning = postcss.Warning\nexport const AtRule = postcss.AtRule\nexport const Result = postcss.Result\nexport const Input = postcss.Input\nexport const Rule = postcss.Rule\nexport const Root = postcss.Root\nexport const Node = postcss.Node\n","import type grapesjs from 'grapesjs';\nimport postcss, { Rule, AtRule, Declaration } from 'postcss';\n\nexport type ParsedRule = {\n  selectors: string;\n  style: Record<string, string>;\n  atRule?: string;\n  params?: string;\n}\n\ntype Editor = grapesjs.Editor;\n\n/**\n * Log stuff\n * @param  {Editor} editor\n * @param  {*} msg\n */\nexport const log = (editor: Editor, msg: any) =>\n  editor && editor.log(msg, { ns: 'parser-poscss' });\n\n/**\n * Create rule from node\n * @param  {Object} node\n * @return {Object}\n */\nexport const createRule = (node: Rule): ParsedRule => {\n  const declarations = (node.nodes as Declaration[]) || [];\n  const style: Record<string, string> = {};\n\n  declarations.forEach(({ prop, value, important }) => {\n    style[prop] = value + (important ? ' !important' : '');\n  });\n\n  return {\n    selectors: node.selector || '',\n    style,\n  }\n};\n\n/**\n * Create at rule from node\n * @param  {Object} node\n * @param  {Array<Object>} result\n * @return {Object}\n */\nexport const createAtRule = (node: AtRule, result: ParsedRule[]) => {\n  const { name, params } = node;\n  const isNested = ['media', 'keyframes'].indexOf(name) >= 0;\n\n  if (isNested) {\n    node.nodes.forEach(node => {\n      result.push({\n        ...createRule(node as Rule),\n        atRule: name,\n        params,\n      })\n    });\n  } else {\n    result.push({\n      // @ts-ignore\n      ...createRule(node as Rule),\n      atRule: name,\n    })\n  }\n};\n\nexport default (css: string, editor: Editor) => {\n  const result: ParsedRule[] = [];\n  log(editor, ['Input CSS', css]);\n\n  const ast = postcss().process(css).sync().root;\n  log(editor, ['PostCSS AST', ast]);\n\n  ast.nodes.forEach(node => {\n    const { type } = node;\n\n    switch (type) {\n      case 'rule':\n        result.push(createRule(node));\n        break;\n      case 'atrule':\n        createAtRule(node, result);\n        break;\n    }\n  });\n\n  log(editor, ['Output', result]);\n\n  return result;\n}\n","import type grapesjs from 'grapesjs';\nimport parser from './parser';\n\nconst plugin: grapesjs.Plugin = (editor) => {\n  editor.setCustomParserCss(parser);\n};\n\nexport default plugin;\n"],"names":["root","factory","exports","module","define","amd","globalThis","window","this","x","String","create","isColorSupported","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","createColors","Container","AtRule","constructor","defaults","super","type","append","children","proxyOf","nodes","prepend","default","registerAtRule","Node","Comment","parse","Rule","isClean","my","Declaration","cleanSource","map","i","source","markDirtyUp","node","push","child","parent","each","callback","index","result","iterator","getIterator","indexes","length","walk","e","addToError","walkDecls","prop","RegExp","test","walkRules","selector","walkAtRules","name","walkComments","normalize","last","markDirty","reverse","first","unshift","id","cleanRaws","keepBetween","insertBefore","exist","add","splice","insertAfter","removeChild","undefined","removeAll","replaceValues","pattern","opts","decl","props","includes","fast","value","replace","every","condition","some","indexOf","sample","Array","isArray","slice","Error","text","rebuild","raws","before","getProxyProcessor","set","get","startsWith","args","toProxy","cb","other","lastEach","registerParse","dependant","registerRule","Object","setPrototypeOf","prototype","forEach","pico","terminalHighlight","CssSyntaxError","message","line","column","file","plugin","reason","endLine","endColumn","setMessage","captureStackTrace","showSourceCode","color","css","mark","aside","lines","split","start","Math","max","end","min","maxWidth","str","number","gutter","spacing","join","toString","code","variable","LazyResult","Processor","Document","toResult","stringify","registerLazyResult","registerProcessor","PreviousMap","Input","Root","fromJSON","json","inputs","n","ownInputs","input","inputHydrated","__proto__","inputId","SourceMapConsumer","SourceMapGenerator","fileURLToPath","pathToFileURL","resolve","isAbsolute","nanoid","fromOffsetCache","Symbol","sourceMapAvailable","Boolean","pathAvailable","hasBOM","from","consumer","mapResolve","fromOffset","offset","lastLine","lineToIndex","prevIndex","l","mid","col","error","pos","origin","url","to","fromUrl","originalPositionFor","URL","sourceRoot","mapFile","protocol","sourceContentFor","toJSON","consumerCache","registerInput","MapGenerator","Result","TYPE_TO_CLASS_NAME","document","atrule","rule","comment","PLUGIN_PROPS","postcssPlugin","prepare","Once","DeclarationExit","RuleExit","AtRuleExit","CommentExit","RootExit","DocumentExit","OnceExit","NOT_VISITORS","CHILDREN","isPromise","obj","then","getEvents","key","toLowerCase","toStack","events","eventIndex","visitors","visitorIndex","cleanMarks","postcss","processor","stringified","processed","inline","prev","parser","syntax","helpers","plugins","toStringTag","content","sync","messages","warnings","onFulfilled","onRejected","async","catch","finally","onFinally","Promise","reject","processing","runAsync","getAsyncError","runOnRoot","prepareVisitors","hasListener","walkSync","listeners","subRoot","visitSync","stringifier","data","generate","event","visitor","promise","lastPlugin","handleError","roots","all","postcssVersion","err","console","stack","visitTick","version","filter","keys","visit","pop","registerPostcss","list","string","separators","array","current","func","quote","escape","letter","trim","space","comma","dirname","relative","sep","cssString","mapOpts","isMap","previous","previousMaps","isInline","annotation","isSourcesContent","sourcesContent","withContent","clearAnnotation","setSourcesContent","already","setSourceContent","toUrl","path","applyPrevMaps","applySourceMap","isAnnotation","toBase64","Buffer","btoa","unescape","encodeURIComponent","addAnnotation","outputFile","eol","generateMap","generateString","fromSourceMap","addMapping","generated","original","absolute","encodeURI","sourcePath","noSource","mapping","match","lastIndexOf","p","semicolon","NoWorkResult","_processor","_css","_opts","_map","self","defineProperty","generatedCSS","generatedMap","_root","Stringifier","cloneNode","cloned","hasOwnProperty","call","j","clone","rangeBy","warn","remove","assign","overrides","cloneBefore","cloneAfter","replaceWith","bookmark","foundSelf","next","after","raw","defaultType","between","_","fixed","emitInputs","Map","inputsNextIndex","positionInside","positionBy","word","endIndex","proxyCache","Proxy","postcssNode","s","Parser","tokenizer","SAFE_COMMENT_NEIGHBOR","empty","spaces","customProperty","createTokenizer","token","endOfFile","nextToken","freeSemicolon","emptyRule","endFile","init","getPosition","left","right","colon","bracket","brackets","tokens","back","unclosedBracket","unknownWord","spacesAndCommentsFromEnd","findLastWithPosition","shift","firstSpaces","precheckMissedSemicolon","important","stringFrom","spacesFromEnd","cache","concat","checkMissedSemicolon","unnamedAtrule","open","params","afterName","spacesAndCommentsFromStart","unexpectedClose","unclosedBlock","ownSemicolon","clean","reduce","lastTokenType","element","entries","doubleColon","founded","Warning","initializer","warningPrinted","creator","process","env","LANG","transformer","processOpts","pluginOpts","atRule","existsSync","readFileSync","loadAnnotation","startWith","loadMap","substr","getAnnotationURL","sourceMapString","comments","substring","decodeInline","decodeURIComponent","lastMatch","atob","encoding","loadFile","JSON","prevPath","mappings","_mappings","sections","use","normalized","warning","ignore","selectors","values","DEFAULT_RAW","indent","beforeDecl","beforeRule","beforeOpen","beforeClose","beforeComment","emptyBody","commentLeft","commentRight","builder","body","rawValue","block","own","detect","rawCache","beforeAfter","method","toUpperCase","rawSemicolon","rawEmptyBody","rawIndent","parts","rawBeforeComment","rawBeforeDecl","rawBeforeRule","rawBeforeClose","rawBeforeOpen","rawColon","buf","depth","step","SINGLE_QUOTE","charCodeAt","DOUBLE_QUOTE","BACKSLASH","SLASH","NEWLINE","SPACE","FEED","TAB","CR","OPEN_SQUARE","CLOSE_SQUARE","OPEN_PARENTHESES","CLOSE_PARENTHESES","OPEN_CURLY","CLOSE_CURLY","SEMICOLON","ASTERISK","COLON","AT","RE_AT_END","RE_WORD_END","RE_BAD_BRACKET","RE_HEX_ESCAPE","options","escaped","escapePos","currentToken","valueOf","ignoreErrors","buffer","returned","unclosed","what","ignoreUnclosed","controlChar","fromCharCode","lastIndex","charAt","position","printed","range","opt","urlAlphabet","size","random","customAlphabet","alphabet","defaultSize","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","o","enumerable","r","log","editor","msg","ns","createRule","declarations","style","ast","createAtRule","setCustomParserCss"],"sourceRoot":""}